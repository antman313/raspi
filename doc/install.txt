install.txt
-----------

1. basic raspberrypi board install

- download raspbian image from raspberry.org
   (current: 2012-09-18-wheezy-raspbian.zip)

- unzip
- attach fresh SD card
- on Mac: unmount volume
  > diskutil unmount /Volume/<Name>
- find out _correct_ /dev/rdisk<n> device for SD Card
  > diskutil list
- write image to SD card
  > sudo dd if=2012-09-18-wheezy-raspbian.img of=/dev/rdisk1 bs=2m
  
- wire raspi with power, monitor, keyboard, mouse
- attach SD card and power on, boot

2. setup in "raspi-config" tool

- "expand fs"
- "disable overscan"
- "setup keyboard"
  -> 105 intl keyboard -> more -> german -> eliminate dead keys
  -> default key set -> keep 
- "locale" -> de.UTF-8  (disable en_GB*) -> default locale: de.UTF-8
- "change timezone" -> Europe -> Berlin
- "memory split": GPU -> non-gfx: 16
- (optional) "overclock": Turbo 1000 MHz  (seems to work only on 512 KiB models)
- "enable ssh"
- "boot behaviour" - no desktop at startup
- "update"

  # reboot   (perform sd card resize)

3. custom setup

  (I usually perform these steps already in a ssh sesson - cut & paste from here :)
  host> ssh pi@<your_raspi_ip>

- full update
  > sudo -s
  # apt-get update
  # apt-get dist-upgrade

** rpi-update

- install (see https://github.com/Hexxeh/rpi-update/)
  # apt-get install git-core
  # wget http://goo.gl/1BOfJ -O /usr/bin/rpi-update && sudo chmod +x /usr/bin/rpi-update
  # rpi-update

** System Config

- /boot/config.txt
  hdmi_group=1
  hdmi_mode=19  # 720p for my monitor

** Hostname
  
- set own host name
  -> edit /etc/hostname and set "yourhost"
  -> /etc/hosts add "yourhost" as 127.0.0.1

** Ethernet

  > ifconfig | grep eth0 -> hw address 
  - set host name for Fritz!Box DHCP server
    -> edit /etc/dhcp/dhclient.conf
       interface "eth0" {
	 	 send host-name = "yourhost-eth";
		 send dhcp-client-identifier <mac:add>;
	   }
     
  (you need the interface block only if you have additional wlan)

** (Optional) Wifi (here Netgear Mini USB Dongle )

  - check for adapter
    # dmesg
	# iwlist scan
  - in /etc/network/interfaces
       auto wlan0
	   iface wlan0 inet dhcp
	   wpa-conf /etc/wpa.conf
  - create /etc/wpa.conf
	   network={
	   	ssid="<your_ssid>"
	   	key_mgmt=WPA-PSK
	   	psk="<your_passwd>"
	   }
  - add to /etc/dhcp/dhclient.conf
      interface "eth0" {
 	    send host-name = "yourhost";
	    send dhcp-client-identifier <mac:addr:wlan>;
      }
  # ifdownt wlan0
  # ifup wlan0
  
- reboot  

** NSF/Autofs 

  # apt-get install autofs
  
  - edit /etc/auto.master, add:
  /net	/etc/auto.net
  
  - create /etc/auto.net
  nfs-share   -soft,intr,vers=3       ion:/disc/storage4/nfs-share
  
  - int /etc/default/nfs-commons:
  NEED_STATD=yes
  
  # /etc/init.d/autofs restart
  
  - Note: on one Pi I needed:
  # update-rc.d rpcbind enable
  # update-rc.d nfs-common enable
  # update-rc.d rpcbind defaults
  # update-rc.d nfs-common defaults
  
  # /etc/init.d/rpcbind restart
  # /etc/init.d/nfs-common restart
  
** Add user "chris"

  # adduser --uid 501 chris
  # usermod -a -G adm,dialout,cdrom,sudo,audio,video,plugdev,games,users,netdev,i2c,input chris
  
  - link autofs shares for user chris (see below)
  > cd $HOME
  > mkdir net
  > cd net ; ln -s /net/nfs-share share
  
** SSH for "chris"

- push SSH credentials from host machine
  
  host> ssh-copy-id chris@<yourpi>
  host> scp -r ~/.ssh yourpi:

** Stream-line MOTD

  # vi /etc/motd
  --> hostname <--

----- Add Ons -----

** Make a script autorun on every boot with user "chris"

  - edit /etc/inittab
    2:23:respawn:/bin/login -f chris tty2 </dev/tty2 >/dev/tty2 2>&1

  - in $HOME/.bashrc add:
    if [ $(tty) == /dev/tty2 ]; then
	  echo "AUTO-RUN"
	  ./my_script
	  sleep 5
	  exit 0
	fi
	
** Use Green LED for own stuff

  - enable/disable LED mode
    # echo none >/sys/class/leds/led0/trigger
	# echo mmc0 >/sys/class/leds/led0/trigger
  - toggle LED
    # echo 1 >/sys/class/leds/led0/brightness
    # echo 0 >/sys/class/leds/led0/brightness
