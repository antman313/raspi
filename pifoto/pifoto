#!/usr/bin/env python3
# 
# pifoto - main launcher script
# 

import subprocess
import time
import sys
import os

def cam_autodetect():
  out = subprocess.check_output(['gphoto2','--auto-detect'])
  s = out.decode("utf-8")
  lines = s.split("\n")
  if len(lines) < 4:
    return None
  else:
    l = lines[2]
    t = l.split()
    cam = " ".join(t[:-1])
    port = t[-1]
    return(cam,port)

def find_cam():
  print("Looking for camera...",end="")
  while True:
    found = cam_autodetect()
    if found != None:
      print(found[0])
      return found[1]
    print(".",end="")
    sys.stdout.flush()
    time.sleep(5)

def run_tool(name,args):
  p = subprocess.Popen(args, \
          stdout=subprocess.PIPE, stderr=subprocess.PIPE, \
          shell=False, bufsize=1)
  try:
    pipe = p.stdout
    p.poll()
    while p.returncode == None:
      line = pipe.readline().decode("utf-8").strip()
      # ignore the many UNKNOWN messages
      if not line.startswith("UNKNOWN"):
        print(name,line)
      p.poll()
    rc = p.returncode
    print(name,"exited with code",rc)
    return rc
  except KeyboardInterrupt:
    print("Aborting",name)
    p.kill()
    return None

def run_capture_tethered(port):
  print("Running Capture Tethered")
  args = ['gphoto2','--port',port,'--capture-tethered','--hook-script','pifoto-hook']
  rc = run_tool("Capture:",args)

def main():
  print("Welcome to pifoto!")
  try:
    while True:
      port = find_cam()
      print("Found camera on port",port)
      run_capture_tethered(port)
      print("Retrying in 5s... Ctrl-C now to exit!")
      time.sleep(5)
  except KeyboardInterrupt:
    print("Shutting down...")
  
if __name__ == "__main__":
  main()
